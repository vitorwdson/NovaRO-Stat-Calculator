{"version":3,"sources":["config/classes.ts","config/thresholds.ts","App.tsx","index.tsx"],"names":["classes","name","transcended","jobBonuses","str","agi","vit","int","dex","luk","thresholds","level","points","calculateCost","current","goal","cost","c","Math","floor","abs","App","useState","setPoints","maxPoints","setMaxPoints","jobBonus","setJobBonus","isTranscended","setTranscended","maxStats","setMaxStats","setStr","setAgi","setVit","setInt","setDex","setLuk","useEffect","newPoints","className","htmlFor","id","onChange","e","classIndex","parseInt","target","value","map","cl","i","th","baby","min","type","max","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yJAmPeA,EAnPC,CACd,CACEC,KAAM,cACNC,aAAa,EACbC,WAAY,CACVC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,GACLC,IAAK,EACLC,IAAK,IAGT,CACER,KAAM,cACNC,aAAa,EACbC,WAAY,CACVC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,GACLC,IAAK,EACLC,IAAK,IAGT,CACER,KAAM,UACNC,aAAa,EACbC,WAAY,CACVC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,GACLC,IAAK,EACLC,IAAK,IAGT,CACER,KAAM,WACNC,aAAa,EACbC,WAAY,CACVC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,GACLC,IAAK,EACLC,IAAK,IAGT,CACER,KAAM,SACNC,aAAa,EACbC,WAAY,CACVC,IAAK,EACLC,IAAK,GACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,IAGT,CACER,KAAM,WACNC,aAAa,EACbC,WAAY,CACVC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,GACLC,IAAK,IAGT,CACER,KAAM,WACNC,aAAa,EACbC,WAAY,CACVC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,IAGT,CACER,KAAM,WACNC,aAAa,EACbC,WAAY,CACVC,IAAK,GACLC,IAAK,EACLC,IAAK,GACLC,IAAK,EACLC,IAAK,EACLC,IAAK,IAGT,CACER,KAAM,aACNC,aAAa,EACbC,WAAY,CACVC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,GACLC,IAAK,EACLC,IAAK,IAGT,CACER,KAAM,mBACNC,aAAa,EACbC,WAAY,CACVC,IAAK,EACLC,IAAK,GACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,IAGT,CACER,KAAM,gBACNC,aAAa,EACbC,WAAY,CACVC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,IAGT,CACER,KAAM,cACNC,aAAa,EACbC,WAAY,CA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","file":"static/js/main.5a3c3273.chunk.js","sourcesContent":["const classes = [\r\n  {\r\n    name: 'Rune Knight',\r\n    transcended: true,\r\n    jobBonuses: {\r\n      str: 6,\r\n      agi: 6,\r\n      vit: 7,\r\n      int: 10,\r\n      dex: 9,\r\n      luk: 5,\r\n    },\r\n  },\r\n  {\r\n    name: 'Royal Guard',\r\n    transcended: true,\r\n    jobBonuses: {\r\n      str: 9,\r\n      agi: 3,\r\n      vit: 9,\r\n      int: 10,\r\n      dex: 9,\r\n      luk: 3,\r\n    },\r\n  },\r\n  {\r\n    name: 'Warlock',\r\n    transcended: true,\r\n    jobBonuses: {\r\n      str: 1,\r\n      agi: 7,\r\n      vit: 8,\r\n      int: 15,\r\n      dex: 8,\r\n      luk: 4,\r\n    },\r\n  },\r\n  {\r\n    name: 'Sorcerer',\r\n    transcended: true,\r\n    jobBonuses: {\r\n      str: 4,\r\n      agi: 4,\r\n      vit: 8,\r\n      int: 13,\r\n      dex: 9,\r\n      luk: 5,\r\n    },\r\n  },\r\n  {\r\n    name: 'Ranger',\r\n    transcended: true,\r\n    jobBonuses: {\r\n      str: 2,\r\n      agi: 12,\r\n      vit: 8,\r\n      int: 9,\r\n      dex: 8,\r\n      luk: 4,\r\n    },\r\n  },\r\n  {\r\n    name: 'Minstrel',\r\n    transcended: true,\r\n    jobBonuses: {\r\n      str: 7,\r\n      agi: 7,\r\n      vit: 7,\r\n      int: 9,\r\n      dex: 10,\r\n      luk: 3,\r\n    },\r\n  },\r\n  {\r\n    name: 'Wanderer',\r\n    transcended: true,\r\n    jobBonuses: {\r\n      str: 7,\r\n      agi: 9,\r\n      vit: 7,\r\n      int: 9,\r\n      dex: 9,\r\n      luk: 2,\r\n    },\r\n  },\r\n  {\r\n    name: 'Mechanic',\r\n    transcended: true,\r\n    jobBonuses: {\r\n      str: 10,\r\n      agi: 6,\r\n      vit: 10,\r\n      int: 6,\r\n      dex: 5,\r\n      luk: 6,\r\n    },\r\n  },\r\n  {\r\n    name: 'Geneticist',\r\n    transcended: true,\r\n    jobBonuses: {\r\n      str: 5,\r\n      agi: 6,\r\n      vit: 8,\r\n      int: 12,\r\n      dex: 8,\r\n      luk: 4,\r\n    },\r\n  },\r\n  {\r\n    name: 'Guillotine Cross',\r\n    transcended: true,\r\n    jobBonuses: {\r\n      str: 8,\r\n      agi: 11,\r\n      vit: 6,\r\n      int: 5,\r\n      dex: 9,\r\n      luk: 4,\r\n    },\r\n  },\r\n  {\r\n    name: 'Shadow Chaser',\r\n    transcended: true,\r\n    jobBonuses: {\r\n      str: 8,\r\n      agi: 9,\r\n      vit: 8,\r\n      int: 6,\r\n      dex: 6,\r\n      luk: 6,\r\n    },\r\n  },\r\n  {\r\n    name: 'Arch Bishop',\r\n    transcended: true,\r\n    jobBonuses: {\r\n      str: 6,\r\n      agi: 7,\r\n      vit: 7,\r\n      int: 12,\r\n      dex: 7,\r\n      luk: 4,\r\n    },\r\n  },\r\n  {\r\n    name: 'Sura',\r\n    transcended: true,\r\n    jobBonuses: {\r\n      str: 10,\r\n      agi: 10,\r\n      vit: 6,\r\n      int: 8,\r\n      dex: 8,\r\n      luk: 1,\r\n    },\r\n  },\r\n  {\r\n    name: 'Soul Reaper',\r\n    transcended: false,\r\n    jobBonuses: {\r\n      str: 3,\r\n      agi: 7,\r\n      vit: 7,\r\n      int: 11,\r\n      dex: 13,\r\n      luk: 2,\r\n    },\r\n  },\r\n  {\r\n    name: 'Star Emperor',\r\n    transcended: false,\r\n    jobBonuses: {\r\n      str: 12,\r\n      agi: 10,\r\n      vit: 6,\r\n      int: 3,\r\n      dex: 9,\r\n      luk: 3,\r\n    },\r\n  },\r\n  {\r\n    name: 'Kagerou',\r\n    transcended: false,\r\n    jobBonuses: {\r\n      str: 7,\r\n      agi: 10,\r\n      vit: 6,\r\n      int: 6,\r\n      dex: 9,\r\n      luk: 5,\r\n    },\r\n  },\r\n  {\r\n    name: 'Oboro',\r\n    transcended: false,\r\n    jobBonuses: {\r\n      str: 7,\r\n      agi: 10,\r\n      vit: 6,\r\n      int: 6,\r\n      dex: 8,\r\n      luk: 6,\r\n    },\r\n  },\r\n  {\r\n    name: 'Rebellion',\r\n    transcended: false,\r\n    jobBonuses: {\r\n      str: 3,\r\n      agi: 8,\r\n      vit: 6,\r\n      int: 8,\r\n      dex: 11,\r\n      luk: 7,\r\n    },\r\n  },\r\n  {\r\n    name: 'Super Novice',\r\n    transcended: false,\r\n    jobBonuses: {\r\n      str: 7,\r\n      agi: 7,\r\n      vit: 6,\r\n      int: 6,\r\n      dex: 6,\r\n      luk: 5,\r\n    },\r\n  },\r\n  {\r\n    name: 'Summoner',\r\n    transcended: false,\r\n    jobBonuses: {\r\n      str: 0,\r\n      agi: 7,\r\n      vit: 5,\r\n      int: 9,\r\n      dex: 12,\r\n      luk: 5,\r\n    },\r\n  },\r\n]\r\n\r\nexport default classes","const thresholds = [\r\n  {\r\n    level: 200,\r\n    points: 4150,\r\n  },\r\n  {\r\n    level: 170,\r\n    points: 3176,\r\n  },\r\n  {\r\n    level: 130,\r\n    points: 2067,\r\n  },\r\n  {\r\n    level: 100,\r\n    points: 1347,\r\n  },\r\n]\r\n\r\nexport default thresholds","import { useState, useEffect } from 'react'\nimport classes from './config/classes'\nimport thresholds from './config/thresholds'\nimport './App.css'\n\nfunction calculateCost(current: number, goal: number) {\n  let cost = 0\n\n  for (let c = current; c < goal; c++) {\n    if (c <= 99) {\n      cost += Math.floor((c - 1) / 10) + 2\n    } else {\n      cost += 4 * Math.floor(Math.abs(c - 100) / 5) + 16\n    }\n  }\n\n  return cost\n}\n\nfunction App() {\n  const [points, setPoints] = useState(0)\n  const [maxPoints, setMaxPoints] = useState(thresholds[0].points)\n  const [jobBonus, setJobBonus] = useState(classes[0].jobBonuses)\n  const [isTranscended, setTranscended] = useState(true)\n  const [maxStats, setMaxStats] = useState(130)\n  const [str, setStr] = useState(1)\n  const [agi, setAgi] = useState(1)\n  const [vit, setVit] = useState(1)\n  const [int, setInt] = useState(1)\n  const [dex, setDex] = useState(1)\n  const [luk, setLuk] = useState(1)\n\n  useEffect(() => {\n    let newPoints = maxPoints - (isTranscended ? 0 : 52)\n    \n    newPoints -= calculateCost(1, str)\n    newPoints -= calculateCost(1, agi)\n    newPoints -= calculateCost(1, vit)\n    newPoints -= calculateCost(1, int)\n    newPoints -= calculateCost(1, dex)\n    newPoints -= calculateCost(1, luk)\n\n    setPoints(newPoints)\n  }, [maxPoints, isTranscended, str, agi, vit, int, dex, luk])\n\n  function babyOnChange(e: React.ChangeEvent<HTMLSelectElement>) {\n    const baby = e.target.value === 'true'\n\n    setMaxStats(baby ? 117 : 130)\n    if (baby) {\n      setStr(Math.min(str, 117))\n      setAgi(Math.min(agi, 117))\n      setVit(Math.min(vit, 117))\n      setInt(Math.min(int, 117))\n      setDex(Math.min(dex, 117))\n      setLuk(Math.min(luk, 117))\n    }\n  }\n\n  function levelOnChange(e: React.ChangeEvent<HTMLSelectElement>) {\n    const points = parseInt(e.target.value)\n    setMaxPoints(points)\n  }\n\n  function classOnChange(e: React.ChangeEvent<HTMLSelectElement>) {\n    const classIndex = parseInt(e.target.value)\n    setTranscended(classes[classIndex].transcended)\n    setJobBonus(classes[classIndex].jobBonuses)\n  }\n\n  function strOnChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const value = parseInt(e.target.value)\n    setStr(Math.min(Math.max(value, 1), maxStats))\n  }\n\n  function agiOnChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const value = parseInt(e.target.value)\n    setAgi(Math.min(Math.max(value, 1), maxStats))\n  }\n\n  function vitOnChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const value = parseInt(e.target.value)\n    setVit(Math.min(Math.max(value, 1), maxStats))\n  }\n\n  function intOnChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const value = parseInt(e.target.value)\n    setInt(Math.min(Math.max(value, 1), maxStats))\n  }\n\n  function dexOnChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const value = parseInt(e.target.value)\n    setDex(Math.min(Math.max(value, 1), maxStats))\n  }\n\n  function lukOnChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const value = parseInt(e.target.value)\n    setLuk(Math.min(Math.max(value, 1), maxStats))\n  }\n\n  return (\n    <div className=\"App\">\n      <label htmlFor=\"classSelector\">Choose your Class:</label>\n      <select id=\"classSelector\" onChange={classOnChange}>\n        {\n          classes.map((cl, i) => (\n            <option value={i} key={cl.name}>{cl.name}</option>\n          ))\n        }\n      </select>\n      <br />\n      <label htmlFor=\"levelelector\">Level Range:</label>\n      <select id=\"levelelector\" onChange={levelOnChange}>\n        {\n          thresholds.map(th => (\n            <option value={th.points} key={th.level}>{th.level}</option>\n          ))\n        }\n      </select>\n      <br />\n      <label htmlFor=\"babyelector\">Baby?:</label>\n      <select id=\"babySelector\" onChange={babyOnChange}>\n          <option value=\"false\">No</option>\n          <option value=\"true\">Yes</option>\n      </select>\n      <br />\n      <label htmlFor=\"strStatInput\">STR:</label>\n      <input type=\"number\" min=\"1\" value={str} max={maxStats} id=\"strStatInput\" onChange={strOnChange} />\n      <span>{calculateCost(str, str + 1)}</span>\n      <span> + {jobBonus.str}</span>\n      <br />\n      <label htmlFor=\"agiStatInput\">AGI:</label>\n      <input type=\"number\" min=\"1\" value={agi} max={maxStats} id=\"agiStatInput\" onChange={agiOnChange} />\n      <span>{calculateCost(agi, agi + 1)}</span>\n      <span> + {jobBonus.agi}</span>\n      <br />\n      <label htmlFor=\"vitStatInput\">VIT:</label>\n      <input type=\"number\" min=\"1\" value={vit} max={maxStats} id=\"vitStatInput\" onChange={vitOnChange} />\n      <span>{calculateCost(vit, vit + 1)}</span>\n      <span> + {jobBonus.vit}</span>\n      <br />\n      <label htmlFor=\"intStatInput\">INT:</label>\n      <input type=\"number\" min=\"1\" value={int} max={maxStats} id=\"intStatInput\" onChange={intOnChange} />\n      <span>{calculateCost(int, int + 1)}</span>\n      <span> + {jobBonus.int}</span>\n      <br />\n      <label htmlFor=\"dexStatInput\">DEX:</label>\n      <input type=\"number\" min=\"1\" value={dex} max={maxStats} id=\"dexStatInput\" onChange={dexOnChange} />\n      <span>{calculateCost(dex, dex + 1)}</span>\n      <span> + {jobBonus.dex}</span>\n      <br />\n      <label htmlFor=\"lukStatInput\">LUK:</label>\n      <input type=\"number\" min=\"1\" value={luk} max={maxStats} id=\"lukStatInput\" onChange={lukOnChange} />\n      <span>{calculateCost(luk, luk + 1)}</span>\n      <span> + {jobBonus.luk}</span>\n      <br />\n      <span>Available points: {points}</span>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}